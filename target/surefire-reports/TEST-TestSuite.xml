<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="45" failures="0" name="TestSuite" time="0.263" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.5+10-post-Ubuntu-0ubuntu1.118.04"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/ashwin/Acads/sem-8/upraised"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="java.vendor.url" value="Unknown"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="IN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/ashwin/Acads/sem-8/upraised"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="11.0.5+10-post-Ubuntu-0ubuntu1.118.04"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.15.0-74-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/ashwin"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="ashwin"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="11.0.5"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2019-10-15"/>
    <property name="java.vendor.url.bug" value="Unknown"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="deleteOpening" time="0.026"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="editCompanyandTitle" time="0.04"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="getCompanies" time="0.007"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="getCompanyAndOpeningsByName" time="0.003"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="getOpeningsByFilterWithSuccess" time="0.002"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="getOpeningsByFilterWithValidationError" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="listOpenings" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="newCompany" time="0"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="newOpenings" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveCompanyWithSuccess" time="0.002"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveCompanyWithValidationError" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveCompanyWithValidationErrorNonCorrectEmployee" time="0.003"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveCompanyWithValidationErrorNonUniqueCompany" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveOpeningsWithSuccess" time="0.002"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveOpeningsWithValidationError" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveOpeningsWithValidationErrorExistingCompany" time="0.002"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveOpeningsWithValidationErrorInvalidSeniority" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="saveOpeningsWithValidationErrorNonUniqueJobId" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="updateOpeningsWithSuccess" time="0.002"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="updateOpeningsWithValidationError" time="0"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="updateOpeningsWithValidationErrorInvalidSeniority" time="0.001"/>
  <testcase classname="com.upraised.springmvc.controller.AppControllerTest" name="updateOpeningsWithValidationErrorNonUniqueJobId" time="0.001"/>
  <testcase classname="com.upraised.springmvc.dao.CompanyDaoImplTest" name="deleteCompanyByInvalidName" time="0.101"/>
  <testcase classname="com.upraised.springmvc.dao.CompanyDaoImplTest" name="deleteCompanyByName" time="0.005"/>
  <testcase classname="com.upraised.springmvc.dao.CompanyDaoImplTest" name="findAllCompanies" time="0.002"/>
  <testcase classname="com.upraised.springmvc.dao.CompanyDaoImplTest" name="findById" time="0.01"/>
  <testcase classname="com.upraised.springmvc.dao.CompanyDaoImplTest" name="findCompanyByName" time="0.012"/>
  <testcase classname="com.upraised.springmvc.dao.CompanyDaoImplTest" name="saveCompany" time="0.02"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="deleteCompanyByName" time="0.001"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="findAllCompanies" time="0"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="findById" time="0.001"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="findCompanyByName" time="0"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="isCompanyByNameUnique" time="0"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="listCompaniesByName" time="0.001"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="listCompaniesByNameWithError" time="0.006"/>
  <testcase classname="com.upraised.springmvc.service.CompanyServiceImplTest" name="saveCompany" time="0.001"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="deleteOpeningsByJobId" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="filterOpenings" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="findAllOpenings" time="0.003"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="findById" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="findOpeningsByCompany" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="findOpeningsByJobId" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="isOpeningsByJobIdUnique" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="saveOpenings" time="0"/>
  <testcase classname="com.upraised.springmvc.service.OpeningsServiceImplTest" name="updateOpenings" time="0.001"/>
</testsuite>